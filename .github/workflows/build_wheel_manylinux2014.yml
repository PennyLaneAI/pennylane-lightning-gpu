name: Wheel::Linux::x86_64
on:
  release:
  push:
    branches:
      - main
  pull_request:

env:
  CIBW_BUILD: 'cp37-* cp38-* cp39-* cp310-*'
  CIBW_BUILD_FRONTEND: "pip"
  CIBW_SKIP: "*-musllinux*"

  # Python build settings
  CIBW_BEFORE_BUILD: |
    python -m pip install pybind11 ninja cmake auditwheel && python -m pip install --no-deps cuquantum 
    yum install -y gcc gcc-c++
    yum-config-manager --add-repo https://developer.download.nvidia.com/compute/cuda/repos/rhel7/x86_64/cuda-rhel7.repo -y
    yum clean all
    yum -y install cuda cmake git openssh wget

  # ensure nvcc is available
  CIBW_ENVIRONMENT: PATH=$PATH:/usr/local/cuda/bin LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda/lib64:$(python -c "import site; print( f'{site.getsitepackages()[0]}/cuquantum/lib')")

  CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
  CIBW_REPAIR_WHEEL_COMMAND_LINUX: "./docker/auditwheel repair -w {dest_dir} {wheel}"

jobs:
  linux-wheels-x86-64:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        arch: [x86_64]
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.9.1
        with:
          access_token: ${{ github.token }}

      - uses: actions/checkout@v2

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel

      - name: Build wheels
        run: python -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS_LINUX: ${{matrix.arch}}

      - uses: actions-ecosystem/action-regex-match@v2
        id: rc_build
        with:
          text: ${{ github.event.pull_request.head.ref }}
          regex: '.*[0-9]+.[0-9]+.[0-9]+[-_]?rc[0-9]+'

      - uses: actions/upload-artifact@v2
        if: ${{ github.event_name == 'release' || github.ref == 'refs/heads/main' || steps.rc_build.outputs.match != ''}}
        with:
          name: ${{ runner.os }}-wheels
          path: ./wheelhouse/*.whl

  upload-pypi:
    needs: linux-wheels-x86-64
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'release' || github.ref == 'refs/heads/main'}}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: Linux-wheels
          path: dist

      - name: Upload wheels to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
          repository_url: https://test.pypi.org/legacy/

